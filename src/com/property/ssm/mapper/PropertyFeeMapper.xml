<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.property.ssm.mapper.PropertyFeeMapper" >
  <resultMap id="BaseResultMap" type="com.property.ssm.po.PropertyFee" >
    <id column="fee_id" property="feeId" jdbcType="INTEGER" />
    <result column="owner_id" property="ownerId" jdbcType="INTEGER" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="inputdate" property="inputdate" jdbcType="DATE" />
    <result column="project" property="project" jdbcType="VARCHAR" />
    <result column="way" property="way" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="DOUBLE" />
    <result column="deliverdate" property="deliverdate" jdbcType="DATE" />
    <result column="transactor" property="transactor" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>

	<resultMap type="com.property.ssm.po.FeeRecord" id="FeeRecord">
	  	<result column="position" property="position" jdbcType="VARCHAR" />
	  	<result column="project" property="project" jdbcType="VARCHAR" />
	  	<result column="way" property="way" jdbcType="VARCHAR" />
	  	<result column="total" property="money" jdbcType="DOUBLE" />
	  	<result column="deliverdate" property="date" jdbcType="DATE" />
 	</resultMap>

  <sql id="Base_Column_List" >
    fee_id, owner_id, position, inputdate, project, way, total, deliverdate, 
    transactor, remark
  </sql>
  
  <!-- 查询所有记录条数 -->
   <select id="findCount" resultType="java.lang.Integer">
  	select 
	count(*)
	from property_fee
  </select>
  
  <!-- 按分页查找所有 -->
  <select id="findByPagination" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select
  	<include refid="Base_Column_List" />
    from property_fee
    order by fee_id desc
    limit #{index},#{pagesize}
  </select>
  
  <!-- 按条件分页查询某一个用户账单 -->
	  <!-- 集合结果 -->
	  <select id="findListByUserAndCondition" resultMap="FeeRecord" parameterType="com.property.ssm.po.FeeRecord">
	  	select 
		*
		from property_fee
		<where>
			way!='未交'
			<if test="position!=null and position!=''">
				and	position=#{position}
			</if>
			<if test="startdate!=null and stopdate!=null">
				and (date(deliverdate) BETWEEN #{startdate} AND #{stopdate})
			</if>
		</where>
	  </select>
  
  <select id="findCountByPositionAndFeeState" resultType="java.lang.Integer" parameterType="java.lang.String">
  	select
  	count(*)
    from property_fee
    where position=#{value} and way='未交'
  </select>
  
  <!-- 按条件分页查找所有 -->
  <select id="findByPaginationAndCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select
  	<include refid="Base_Column_List" />
    from property_fee
	where ${name}=#{value}
    limit #{index},#{pagesize}
  </select>
  
  <select id="findByPositionAndFeeState" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select
  	<include refid="Base_Column_List" />
    from property_fee
    where position=#{value} and way='未交'
  </select>
  
  <!-- 查询缴费历史 -->
  <select id="findFeeRecord" resultMap="FeeRecord" parameterType="java.util.Map">
  	select
  	*
  	from property_fee
  	where position=#{position} 
  	and way!='未交'
  	<if test="startdate != null and stopdate != null">
  		and (date(deliverdate) BETWEEN #{startdate} AND #{stopdate})
  	</if>
  </select>
  
  <!-- 按年份和月份查询 -->
  <select id="findByYearAndMonth" resultMap="BaseResultMap" parameterType="java.util.Map">
  	SELECT * FROM property_fee WHERE YEAR(inputdate)=#{year} AND MONTH(inputdate)=#{month}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from property_fee
    where fee_id = #{feeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from property_fee
    where fee_id = #{feeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.property.ssm.po.PropertyFee" >
    insert into property_fee (fee_id, owner_id, position, 
      inputdate, project, way, 
      total, deliverdate, transactor, remark
      )
    values (#{feeId,jdbcType=INTEGER}, #{ownerId,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR}, 
      #{inputdate,jdbcType=DATE}, #{project,jdbcType=VARCHAR}, #{way,jdbcType=VARCHAR}, 
      #{total,jdbcType=DOUBLE}, #{deliverdate,jdbcType=DATE}, #{transactor,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.property.ssm.po.PropertyFee" >
    insert into property_fee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="feeId != null" >
        fee_id,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="inputdate != null" >
        inputdate,
      </if>
      <if test="project != null" >
        project,
      </if>
      <if test="way != null" >
        way,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="deliverdate != null" >
        deliverdate,
      </if>
      <if test="transactor != null" >
        transactor,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="feeId != null" >
        #{feeId,jdbcType=INTEGER},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="inputdate != null" >
        #{inputdate,jdbcType=DATE},
      </if>
      <if test="project != null" >
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="way != null" >
        #{way,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="deliverdate != null" >
        #{deliverdate,jdbcType=DATE},
      </if>
      <if test="transactor != null" >
        #{transactor,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey keyProperty="feeId" order="AFTER" keyColumn="fee_id" resultType="java.lang.Integer">
    	SELECT LAST_INSERT_ID() AS VALUE
  	</selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.property.ssm.po.PropertyFee">
    update property_fee
    <set >
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="inputdate != null" >
        inputdate = #{inputdate,jdbcType=DATE},
      </if>
      <if test="project != null" >
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="way != null" >
        way = #{way,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="deliverdate != null" >
        deliverdate = #{deliverdate,jdbcType=DATE},
      </if>
      <if test="transactor != null" >
        transactor = #{transactor,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where fee_id = #{feeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.property.ssm.po.PropertyFee" >
    update property_fee
    set owner_id = #{ownerId,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      inputdate = #{inputdate,jdbcType=DATE},
      project = #{project,jdbcType=VARCHAR},
      way = #{way,jdbcType=VARCHAR},
      total = #{total,jdbcType=DOUBLE},
      deliverdate = #{deliverdate,jdbcType=DATE},
      transactor = #{transactor,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where fee_id = #{feeId,jdbcType=INTEGER}
  </update>
</mapper>